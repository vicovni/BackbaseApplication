Root WebApplicationContext: initialization started
Refreshing Root WebApplicationContext
You are running with Spring Security Core 5.1.13.RELEASE
Spring Security 'config' module version is 5.1.13.RELEASE
No login page configured. The default internal one will be used. Use the 'login-page' attribute to set the URL of the login page.
Checking sorted filter chain: [Root bean: class [org.springframework.security.web.context.SecurityContextPersistenceFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 200, Root bean: class [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 400, Root bean: class [org.springframework.security.web.header.HeaderWriterFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 500, Root bean: class [org.springframework.security.web.csrf.CsrfFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 700, Root bean: class [org.springframework.security.web.authentication.logout.LogoutFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 800, <org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter#0>, order = 1200, Root bean: class [org.springframework.security.web.authentication.ui.DefaultLoginPageGeneratingFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 1400, Root bean: class [org.springframework.security.web.authentication.www.BasicAuthenticationFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 1600, Root bean: class [org.springframework.security.web.savedrequest.RequestCacheAwareFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 1700, Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.security.config.http.HttpConfigurationBuilder$SecurityContextHolderAwareRequestFilterBeanFactory#0; factoryMethodName=getBean; initMethodName=null; destroyMethodName=null, order = 1800, Root bean: class [org.springframework.security.web.authentication.AnonymousAuthenticationFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 2100, Root bean: class [org.springframework.security.web.session.SessionManagementFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 2200, Root bean: class [org.springframework.security.web.access.ExceptionTranslationFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 2300, <org.springframework.security.web.access.intercept.FilterSecurityInterceptor#0>, order = 2400]
Loaded 23 bean definitions from ServletContext resource [/WEB-INF/spring/security.xml]
Unable to locate ThemeSource with name 'themeSource': using default [org.springframework.ui.context.support.ResourceBundleThemeSource@cf67838]
Creating shared instance of singleton bean 'org.springframework.security.filterChains'
Creating shared instance of singleton bean 'org.springframework.security.web.DefaultSecurityFilterChain#0'
Creating shared instance of singleton bean 'org.springframework.security.web.context.HttpSessionSecurityContextRepository#0'
Creating shared instance of singleton bean 'org.springframework.security.web.csrf.LazyCsrfTokenRepository#0'
Creating shared instance of singleton bean 'org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter#0'
Creating shared instance of singleton bean 'org.springframework.security.web.savedrequest.HttpSessionRequestCache#0'
Creating shared instance of singleton bean 'org.springframework.security.web.PortResolverImpl#0'
Creating shared instance of singleton bean 'org.springframework.security.web.PortMapperImpl#0'
Creating shared instance of singleton bean 'org.springframework.security.web.authentication.session.CompositeSessionAuthenticationStrategy#0'
Creating shared instance of singleton bean 'org.springframework.security.authentication.ProviderManager#0'
Creating shared instance of singleton bean 'org.springframework.security.authentication.AnonymousAuthenticationProvider#0'
Creating shared instance of singleton bean 'org.springframework.security.config.authentication.AuthenticationManagerFactoryBean#0'
Creating shared instance of singleton bean 'org.springframework.security.userDetailsService'
Creating shared instance of singleton bean 'org.springframework.security.web.authentication.www.BasicAuthenticationEntryPoint#0'
Creating shared instance of singleton bean 'org.springframework.security.config.http.HttpConfigurationBuilder$SecurityContextHolderAwareRequestFilterBeanFactory#0'
Creating shared instance of singleton bean 'org.springframework.security.web.access.intercept.FilterSecurityInterceptor#0'
Creating shared instance of singleton bean 'org.springframework.security.access.vote.AffirmativeBased#0'
Creating shared instance of singleton bean 'org.springframework.security.config.http.FilterInvocationSecurityMetadataSourceParser$DefaultWebSecurityExpressionHandlerBeanFactory#0$created#0'
Creating shared instance of singleton bean 'org.springframework.security.config.http.FilterInvocationSecurityMetadataSourceParser$DefaultWebSecurityExpressionHandlerBeanFactory#0'
Adding web access control expression 'authenticated', for any request
Validated configuration attributes
Creating filter chain: any request, [org.springframework.security.web.context.SecurityContextPersistenceFilter@227a47, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@9596ce8, org.springframework.security.web.header.HeaderWriterFilter@75ae4a1f, org.springframework.security.web.csrf.CsrfFilter@70228253, org.springframework.security.web.authentication.logout.LogoutFilter@63c12e52, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@21bd20ee, org.springframework.security.web.authentication.ui.DefaultLoginPageGeneratingFilter@26c47874, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@421056e5, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@2849434b, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@60bbacfc, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@65b97f47, org.springframework.security.web.session.SessionManagementFilter@255eaa6b, org.springframework.security.web.access.ExceptionTranslationFilter@476fe690, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@7a0e7ecd]
Creating shared instance of singleton bean 'org.springframework.security.filterChainProxy'
Checking whether login URL '/login' is accessible with your configuration
Default generated login page is in use
Creating shared instance of singleton bean 'requestDataValueProcessor'
Creating shared instance of singleton bean 'org.springframework.security.web.access.DefaultWebInvocationPrivilegeEvaluator#0'
Creating shared instance of singleton bean 'org.springframework.security.userDetailsServiceFactory'
Looking up JNDI object with name [java:comp/env/spring.liveBeansView.mbeanDomain]
Converted JNDI name [java:comp/env/spring.liveBeansView.mbeanDomain] not found - trying original name [spring.liveBeansView.mbeanDomain]. javax.naming.NameNotFoundException; remaining name 'spring.liveBeansView.mbeanDomain'
Looking up JNDI object with name [spring.liveBeansView.mbeanDomain]
JNDI lookup for name [spring.liveBeansView.mbeanDomain] threw NamingException with message: null. Returning null.
Root WebApplicationContext initialized in 947 ms
Filter 'springSecurityFilterChain' configured for use
Initializing Servlet 'rest'
Looking up JNDI object with name [java:comp/env/spring.profiles.active]
Converted JNDI name [java:comp/env/spring.profiles.active] not found - trying original name [spring.profiles.active]. javax.naming.NameNotFoundException; remaining name 'spring.profiles.active'
Looking up JNDI object with name [spring.profiles.active]
JNDI lookup for name [spring.profiles.active] threw NamingException with message: null. Returning null.
Looking up JNDI object with name [java:comp/env/spring.profiles.default]
Converted JNDI name [java:comp/env/spring.profiles.default] not found - trying original name [spring.profiles.default]. javax.naming.NameNotFoundException; remaining name 'spring.profiles.default'
Looking up JNDI object with name [spring.profiles.default]
JNDI lookup for name [spring.profiles.default] threw NamingException with message: null. Returning null.
Refreshing WebApplicationContext for namespace 'rest-servlet'
Identified candidate component class: file [C:\Users\VICTORHUGOCALDERONGO\eclipse-workspace\BackbaseApplication\target\classes\com\backbaseproject\api\controller\BackbaseApplicationController.class]
Loaded 20 bean definitions from ServletContext resource [/WEB-INF/rest-servlet.xml]
Creating shared instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
Identified candidate component class: file [C:\Users\VICTORHUGOCALDERONGO\eclipse-workspace\BackbaseApplication\target\classes\com\backbaseproject\api\service\OpenBankServiceImpl.class]
Creating shared instance of singleton bean 'org.springframework.context.event.internalEventListenerProcessor'
Creating shared instance of singleton bean 'org.springframework.context.event.internalEventListenerFactory'
Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
Creating shared instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
Unable to locate ThemeSource with name 'themeSource': using default [org.springframework.ui.context.support.DelegatingThemeSource@47148f3f]
Creating shared instance of singleton bean 'backbaseApplicationController'
Creating shared instance of singleton bean 'openBankServiceImpl'
Creating shared instance of singleton bean 'mvcContentNegotiationManager'
Creating shared instance of singleton bean 'org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping'
Creating shared instance of singleton bean 'mvcCorsConfigurations'
Creating shared instance of singleton bean 'org.springframework.web.servlet.handler.MappedInterceptor#0'
Creating shared instance of singleton bean 'org.springframework.format.support.FormattingConversionServiceFactoryBean#0'
8 mappings in 'org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping'
Creating shared instance of singleton bean 'org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter'
ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
Creating shared instance of singleton bean 'mvcUriComponentsContributor'
ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
Creating shared instance of singleton bean 'org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver#0'
ControllerAdvice beans: 0 @ExceptionHandler, 1 ResponseBodyAdvice
Creating shared instance of singleton bean 'org.springframework.web.servlet.mvc.annotation.ResponseStatusExceptionResolver#0'
Creating shared instance of singleton bean 'org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver#0'
Creating shared instance of singleton bean 'org.springframework.web.servlet.handler.BeanNameUrlHandlerMapping'
Creating shared instance of singleton bean 'org.springframework.web.servlet.mvc.HttpRequestHandlerAdapter'
Creating shared instance of singleton bean 'org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter'
Looking up JNDI object with name [java:comp/env/spring.liveBeansView.mbeanDomain]
Converted JNDI name [java:comp/env/spring.liveBeansView.mbeanDomain] not found - trying original name [spring.liveBeansView.mbeanDomain]. javax.naming.NameNotFoundException; remaining name 'spring.liveBeansView.mbeanDomain'
Looking up JNDI object with name [spring.liveBeansView.mbeanDomain]
JNDI lookup for name [spring.liveBeansView.mbeanDomain] threw NamingException with message: null. Returning null.
enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
Completed initialization in 923 ms
/anonymous/transactiontype/amount at position 1 of 14 in additional filter chain; firing Filter: 'SecurityContextPersistenceFilter'
No HttpSession currently exists
No SecurityContext was available from the HttpSession: null. A new one will be created.
/anonymous/transactiontype/amount at position 2 of 14 in additional filter chain; firing Filter: 'WebAsyncManagerIntegrationFilter'
/anonymous/transactiontype/amount at position 3 of 14 in additional filter chain; firing Filter: 'HeaderWriterFilter'
/anonymous/transactiontype/amount at position 4 of 14 in additional filter chain; firing Filter: 'CsrfFilter'
/anonymous/transactiontype/amount at position 5 of 14 in additional filter chain; firing Filter: 'LogoutFilter'
Request 'GET /anonymous/transactiontype/amount' doesn't match 'POST /logout'
/anonymous/transactiontype/amount at position 6 of 14 in additional filter chain; firing Filter: 'UsernamePasswordAuthenticationFilter'
Request 'GET /anonymous/transactiontype/amount' doesn't match 'POST /login'
/anonymous/transactiontype/amount at position 7 of 14 in additional filter chain; firing Filter: 'DefaultLoginPageGeneratingFilter'
/anonymous/transactiontype/amount at position 8 of 14 in additional filter chain; firing Filter: 'BasicAuthenticationFilter'
Basic Authentication Authorization header found for user 'user'
Authentication attempt using org.springframework.security.authentication.dao.DaoAuthenticationProvider
Authentication success: org.springframework.security.authentication.UsernamePasswordAuthenticationToken@442b5a9f: Principal: org.springframework.security.core.userdetails.User@36ebcb: Username: user; Password: [PROTECTED]; Enabled: true; AccountNonExpired: true; credentialsNonExpired: true; AccountNonLocked: true; Granted Authorities: ROLE_USER; Credentials: [PROTECTED]; Authenticated: true; Details: org.springframework.security.web.authentication.WebAuthenticationDetails@b364: RemoteIpAddress: 0:0:0:0:0:0:0:1; SessionId: null; Granted Authorities: ROLE_USER
/anonymous/transactiontype/amount at position 9 of 14 in additional filter chain; firing Filter: 'RequestCacheAwareFilter'
saved request doesn't match
/anonymous/transactiontype/amount at position 10 of 14 in additional filter chain; firing Filter: 'SecurityContextHolderAwareRequestFilter'
/anonymous/transactiontype/amount at position 11 of 14 in additional filter chain; firing Filter: 'AnonymousAuthenticationFilter'
SecurityContextHolder not populated with anonymous token, as it already contained: 'org.springframework.security.authentication.UsernamePasswordAuthenticationToken@442b5a9f: Principal: org.springframework.security.core.userdetails.User@36ebcb: Username: user; Password: [PROTECTED]; Enabled: true; AccountNonExpired: true; credentialsNonExpired: true; AccountNonLocked: true; Granted Authorities: ROLE_USER; Credentials: [PROTECTED]; Authenticated: true; Details: org.springframework.security.web.authentication.WebAuthenticationDetails@b364: RemoteIpAddress: 0:0:0:0:0:0:0:1; SessionId: null; Granted Authorities: ROLE_USER'
/anonymous/transactiontype/amount at position 12 of 14 in additional filter chain; firing Filter: 'SessionManagementFilter'
Delegating to org.springframework.security.web.csrf.CsrfAuthenticationStrategy@1fefdd6b
Delegating to org.springframework.security.web.authentication.session.ChangeSessionIdAuthenticationStrategy@15f2062d
HttpSession being created as SecurityContext is non-default
SecurityContext 'org.springframework.security.core.context.SecurityContextImpl@442b5a9f: Authentication: org.springframework.security.authentication.UsernamePasswordAuthenticationToken@442b5a9f: Principal: org.springframework.security.core.userdetails.User@36ebcb: Username: user; Password: [PROTECTED]; Enabled: true; AccountNonExpired: true; credentialsNonExpired: true; AccountNonLocked: true; Granted Authorities: ROLE_USER; Credentials: [PROTECTED]; Authenticated: true; Details: org.springframework.security.web.authentication.WebAuthenticationDetails@b364: RemoteIpAddress: 0:0:0:0:0:0:0:1; SessionId: null; Granted Authorities: ROLE_USER' stored to HttpSession: 'org.eclipse.jetty.server.session.HashedSession:1bklsed1sufxn1qd0n1t1sgncx@1339472428
/anonymous/transactiontype/amount at position 13 of 14 in additional filter chain; firing Filter: 'ExceptionTranslationFilter'
/anonymous/transactiontype/amount at position 14 of 14 in additional filter chain; firing Filter: 'FilterSecurityInterceptor'
Secure object: FilterInvocation: URL: /anonymous/transactiontype/amount; Attributes: [authenticated]
Previously Authenticated: org.springframework.security.authentication.UsernamePasswordAuthenticationToken@442b5a9f: Principal: org.springframework.security.core.userdetails.User@36ebcb: Username: user; Password: [PROTECTED]; Enabled: true; AccountNonExpired: true; credentialsNonExpired: true; AccountNonLocked: true; Granted Authorities: ROLE_USER; Credentials: [PROTECTED]; Authenticated: true; Details: org.springframework.security.web.authentication.WebAuthenticationDetails@b364: RemoteIpAddress: 0:0:0:0:0:0:0:1; SessionId: null; Granted Authorities: ROLE_USER
Voter: org.springframework.security.web.access.expression.WebExpressionVoter@8161218, returned: 1
Authorization successful
RunAsManager did not change Authentication object
/anonymous/transactiontype/amount reached end of additional filter chain; proceeding with original chain
GET "/anonymous/transactiontype/amount", parameters={}
Mapped to public org.springframework.http.ResponseEntity<java.lang.String> com.backbaseproject.api.controller.BackbaseApplicationController.getTotalAmountByTransactionTypeGuest() throws java.lang.Exception
getTotalAmountByTransactionTypeGuest method started
Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@2e4e38eb
Using org.apache.camel.spring.CamelContextFactoryBean as CamelContextBeanDefinitionParser
Registered default: org.apache.camel.spring.CamelProducerTemplateFactoryBean with id: template on camel context: camel-1
Registered default: org.apache.camel.spring.CamelFluentProducerTemplateFactoryBean with id: fluentTemplate on camel context: camel-1
Registered default: org.apache.camel.spring.CamelConsumerTemplateFactoryBean with id: consumerTemplate on camel context: camel-1
Loaded 5 bean definitions from class path resource [applicationContext.xml]
Creating shared instance of singleton bean 'camel-1:beanPostProcessor'
Creating shared instance of singleton bean 'template'
Creating shared instance of singleton bean 'camel-1'
Warming up LRUCache ...
Warming up LRUCache complete in 58 millis
Set the application context classloader to: WebAppClassLoader=1314228008@4e558728
afterPropertiesSet() took 155 millis
Creating shared instance of singleton bean 'fluentTemplate'
Creating shared instance of singleton bean 'consumerTemplate'
Setting up routes
Found JAXB created routes: []
Searching for implementations of org.apache.camel.RoutesBuilder in packages: [com.backbaseproject.api.router]
Found: [class com.backbaseproject.api.router.ApiRestRouter]
Adding instantiated RouteBuilder: Routes: []
Adding routes from builder: Routes: []
Apache Camel 2.25.3 (CamelContext: camel-1) is starting
Using ClassResolver=org.apache.camel.impl.DefaultClassResolver@6e21a16, PackageScanClassResolver=org.apache.camel.impl.DefaultPackageScanClassResolver@76b3e681, ApplicationContextClassLoader=WebAppClassLoader=1314228008@4e558728, RouteController=org.apache.camel.impl.DefaultRouteController@71beed1
JMX is enabled
Starting JMX agent on server: com.sun.jmx.mbeanserver.JmxMBeanServer@62d496ec
Registered MBean with ObjectName: org.apache.camel:context=camel-1,type=context,name="camel-1"
Added TimerListener: org.apache.camel.management.mbean.ManagedCamelContext@782918dd
Registering 1 pre registered services
Registered MBean with ObjectName: org.apache.camel:context=camel-1,type=components,name="spring-event"
Registered MBean with ObjectName: org.apache.camel:context=camel-1,type=health,name="camel-1"
Registered MBean with ObjectName: org.apache.camel:context=camel-1,type=routecontrollers,name="camel-1"
Registered MBean with ObjectName: org.apache.camel:context=camel-1,type=services,name=DefaultTypeConverter
Found 3 packages with 19 @Converter classes to load
Loading file META-INF/services/org/apache/camel/TypeConverter to retrieve list of packages, from url: jar:file:/C:/Users/VICTORHUGOCALDERONGO/.m2/repository/org/apache/camel/camel-spring/2.25.3/camel-spring-2.25.3.jar!/META-INF/services/org/apache/camel/TypeConverter
Loading file META-INF/services/org/apache/camel/TypeConverter to retrieve list of packages, from url: jar:file:/C:/Users/VICTORHUGOCALDERONGO/.m2/repository/org/apache/camel/camel-core/2.25.3/camel-core-2.25.3.jar!/META-INF/services/org/apache/camel/TypeConverter
Loading file META-INF/services/org/apache/camel/TypeConverter to retrieve list of packages, from url: jar:file:/C:/Users/VICTORHUGOCALDERONGO/.m2/repository/org/apache/camel/camel-jackson/2.25.3/camel-jackson-2.25.3.jar!/META-INF/services/org/apache/camel/TypeConverter
Loading file META-INF/services/org/apache/camel/TypeConverter to retrieve list of packages, from url: jar:file:/C:/Users/VICTORHUGOCALDERONGO/.m2/repository/org/apache/camel/camel-http-common/2.25.3/camel-http-common-2.25.3.jar!/META-INF/services/org/apache/camel/TypeConverter
Loading file META-INF/services/org/apache/camel/TypeConverter to retrieve list of packages, from url: jar:file:/C:/Users/VICTORHUGOCALDERONGO/.m2/repository/org/apache/camel/camel-http/2.25.3/camel-http-2.25.3.jar!/META-INF/services/org/apache/camel/TypeConverter
Loaded 4 @Converter classes
Type converters loaded (core: 195, classpath: 10)
Lookup Language with name simple in registry. Found: null
Lookup Language with name simple-language in registry. Found: null
Simple language predicate/expression cache size: 1000
Registered MBean with ObjectName: org.apache.camel:context=camel-1,type=services,name=DefaultEndpointRegistry
Registered MBean with ObjectName: org.apache.camel:context=camel-1,type=services,name=DefaultExecutorServiceManager
Starting service pool: org.apache.camel.impl.SharedProducerServicePool@16235bb9
Starting service pool: org.apache.camel.impl.SharedPollingConsumerServicePool@44a47e55
Registered MBean with ObjectName: org.apache.camel:context=camel-1,type=services,name=DefaultInflightRepository
Registered MBean with ObjectName: org.apache.camel:context=camel-1,type=services,name=DefaultAsyncProcessorAwaitManager
Registered MBean with ObjectName: org.apache.camel:context=camel-1,type=services,name=DefaultShutdownStrategy
Registered MBean with ObjectName: org.apache.camel:context=camel-1,type=services,name=DefaultRestRegistry
Registered MBean with ObjectName: org.apache.camel:context=camel-1,type=services,name=DefaultRuntimeCamelCatalog
Registered MBean with ObjectName: org.apache.camel:context=camel-1,type=services,name=DefaultTransformerRegistry
Registered MBean with ObjectName: org.apache.camel:context=camel-1,type=services,name=DefaultValidatorRegistry
Cannot resolve property placeholders on component: org.apache.camel.component.event.EventComponent@1bdcc98e as PropertiesComponent is not in use
Using ComponentResolver: org.apache.camel.impl.DefaultComponentResolver@61ad19a2 to resolve component with name: direct
Lookup Component with name direct in registry. Found: null
Lookup Component with name direct-component in registry. Found: null
Found component: direct via type: org.apache.camel.component.direct.DirectComponent via: META-INF/services/org/apache/camel/component/direct
Registered MBean with ObjectName: org.apache.camel:context=camel-1,type=components,name="direct"
Cannot resolve property placeholders on component: org.apache.camel.component.direct.DirectComponent@7d1b2949 as PropertiesComponent is not in use
Creating endpoint uri=[direct://hello], path=[hello]
direct://hello converted to endpoint: direct://hello by component: org.apache.camel.component.direct.DirectComponent@7d1b2949
Registered MBean with ObjectName: org.apache.camel:context=camel-1,type=endpoints,name="direct://hello"
LogName is not configured, using route id as logName: route1
Initialize channel for target: 'Log[body insertStudent request ${body}]'
Registered MBean with ObjectName: org.apache.camel:context=camel-1,type=tracer,name=BacklogTracer
Registered MBean with ObjectName: org.apache.camel:context=camel-1,type=tracer,name=BacklogDebugger
Registered MBean with ObjectName: org.apache.camel:context=camel-1,type=errorhandlers,name="DefaultErrorHandlerBuilder(ref:CamelDefaultErrorHandlerBuilder)"
Lookup Language with name constant in registry. Found: null
Lookup Language with name constant-language in registry. Found: null
Initialize channel for target: 'SetHeader[CamelHttpMethod, constant{GET}]'
Initialize channel for target: 'SetHeader[Content-Type, simple{Simple: application/json}]'
Initialize channel for target: 'SetHeader[Authorization, simple{Simple: Basic dXNlcjpwYXNzd29yZA==}]'
Using ComponentResolver: org.apache.camel.impl.DefaultComponentResolver@61ad19a2 to resolve component with name: http
Lookup Component with name http in registry. Found: null
Lookup Component with name http-component in registry. Found: null
Found component: http via type: org.apache.camel.component.http.HttpComponent via: META-INF/services/org/apache/camel/component/http
Registered MBean with ObjectName: org.apache.camel:context=camel-1,type=components,name="http"
Cannot resolve property placeholders on component: org.apache.camel.component.http.HttpComponent@2732351d as PropertiesComponent is not in use
Creating endpoint uri=[http://localhost:8082/hello], path=[localhost:8082/hello]
Set parameter http.useragent = Jakarta Commons-HttpClient/3.1
Set parameter http.protocol.version = HTTP/1.1
Set parameter http.connection-manager.class = class org.apache.commons.httpclient.SimpleHttpConnectionManager
Set parameter http.protocol.cookie-policy = default
Set parameter http.protocol.element-charset = US-ASCII
Set parameter http.protocol.content-charset = ISO-8859-1
Set parameter http.method.retry-handler = org.apache.commons.httpclient.DefaultHttpMethodRetryHandler@14b1857
Set parameter http.dateparser.patterns = [EEE, dd MMM yyyy HH:mm:ss zzz, EEEE, dd-MMM-yy HH:mm:ss zzz, EEE MMM d HH:mm:ss yyyy, EEE, dd-MMM-yyyy HH:mm:ss z, EEE, dd-MMM-yyyy HH-mm-ss z, EEE, dd MMM yy HH:mm:ss z, EEE dd-MMM-yyyy HH:mm:ss z, EEE dd MMM yyyy HH:mm:ss z, EEE dd-MMM-yyyy HH-mm-ss z, EEE dd-MMM-yy HH:mm:ss z, EEE dd MMM yy HH:mm:ss z, EEE,dd-MMM-yy HH:mm:ss z, EEE,dd-MMM-yyyy HH:mm:ss z, EEE, dd-MM-yyyy HH:mm:ss z]
http://localhost:8082/hello converted to endpoint: http://localhost:8082/hello by component: org.apache.camel.component.http.HttpComponent@2732351d
Registered MBean with ObjectName: org.apache.camel:context=camel-1,type=endpoints,name="http://localhost:8082/hello"
Initialize channel for target: 'To[http://localhost:8082/hello]'
Creating endpoint uri=[direct://transaction], path=[transaction]
direct://transaction converted to endpoint: direct://transaction by component: org.apache.camel.component.direct.DirectComponent@7d1b2949
Registered MBean with ObjectName: org.apache.camel:context=camel-1,type=endpoints,name="direct://transaction"
LogName is not configured, using route id as logName: route2
Initialize channel for target: 'Log[body insertStudent request ${body}]'
Initialize channel for target: 'SetHeader[CamelHttpMethod, constant{GET}]'
Initialize channel for target: 'SetHeader[Content-Type, simple{Simple: application/json}]'
Initialize channel for target: 'SetHeader[Authorization, simple{Simple: Basic dXNlcjpwYXNzd29yZA==}]'
Creating endpoint uri=[http://localhost:8082/transaction], path=[localhost:8082/transaction]
http://localhost:8082/transaction converted to endpoint: http://localhost:8082/transaction by component: org.apache.camel.component.http.HttpComponent@2732351d
Registered MBean with ObjectName: org.apache.camel:context=camel-1,type=endpoints,name="http://localhost:8082/transaction"
Initialize channel for target: 'To[http://localhost:8082/transaction]'
Creating endpoint uri=[direct://transactiontype], path=[transactiontype]
direct://transactiontype converted to endpoint: direct://transactiontype by component: org.apache.camel.component.direct.DirectComponent@7d1b2949
Registered MBean with ObjectName: org.apache.camel:context=camel-1,type=endpoints,name="direct://transactiontype"
LogName is not configured, using route id as logName: route3
Initialize channel for target: 'Log[body insertStudent request ${body}]'
Initialize channel for target: 'SetHeader[CamelHttpMethod, constant{GET}]'
Initialize channel for target: 'SetHeader[Content-Type, simple{Simple: application/json}]'
Initialize channel for target: 'SetHeader[Authorization, simple{Simple: Basic dXNlcjpwYXNzd29yZA==}]'
Creating endpoint uri=[http://localhost:8082/transaction/SEPA], path=[localhost:8082/transaction/SEPA]
http://localhost:8082/transaction/SEPA converted to endpoint: http://localhost:8082/transaction/SEPA by component: org.apache.camel.component.http.HttpComponent@2732351d
Registered MBean with ObjectName: org.apache.camel:context=camel-1,type=endpoints,name="http://localhost:8082/transaction/SEPA"
Initialize channel for target: 'To[http://localhost:8082/transaction/SEPA]'
Creating endpoint uri=[direct://transactiontypeamount], path=[transactiontypeamount]
direct://transactiontypeamount converted to endpoint: direct://transactiontypeamount by component: org.apache.camel.component.direct.DirectComponent@7d1b2949
Registered MBean with ObjectName: org.apache.camel:context=camel-1,type=endpoints,name="direct://transactiontypeamount"
LogName is not configured, using route id as logName: route4
Initialize channel for target: 'Log[body insertStudent request ${body}]'
Initialize channel for target: 'SetHeader[CamelHttpMethod, constant{GET}]'
Initialize channel for target: 'SetHeader[Content-Type, simple{Simple: application/json}]'
Initialize channel for target: 'SetHeader[Authorization, simple{Simple: Basic dXNlcjpwYXNzd29yZA==}]'
Creating endpoint uri=[http://localhost:8082/transaction/SEPA/amount], path=[localhost:8082/transaction/SEPA/amount]
http://localhost:8082/transaction/SEPA/amount converted to endpoint: http://localhost:8082/transaction/SEPA/amount by component: org.apache.camel.component.http.HttpComponent@2732351d
Registered MBean with ObjectName: org.apache.camel:context=camel-1,type=endpoints,name="http://localhost:8082/transaction/SEPA/amount"
Initialize channel for target: 'To[http://localhost:8082/transaction/SEPA/amount]'
StreamCaching is not in use. If using streams then its recommended to enable stream caching. See more details at http://camel.apache.org/stream-caching.html
Creating default HeadersMapFactory
Using HeadersMapFactory: org.apache.camel.impl.DefaultHeadersMapFactory@7e8e259d
Warming up route id: route1 having autoStartup=true
Starting services on route: route1
Starting child service on route: route1 -> Pipeline[[Channel[Log(route1)[body insertStudent request ${body}]], Channel[SetHeader(CamelHttpMethod, GET)], Channel[SetHeader(Content-Type, Simple: application/json)], Channel[SetHeader(Authorization, Simple: Basic dXNlcjpwYXNzd29yZA==)], Channel[sendTo(http://localhost:8082/hello)]]]
Java version: 1.8.0_281
Java vendor: Oracle Corporation
Java class path: C:\apache-maven-3.6.3\bin\..\boot\plexus-classworlds-2.6.0.jar
Operating system name: Windows 10
Operating system architecture: amd64
Operating system version: 10.0
SUN 1.8: SUN (DSA key/parameter generation; DSA signing; SHA-1, MD5 digests; SecureRandom; X.509 certificates; JKS & DKS keystores; PKIX CertPathValidator; PKIX CertPathBuilder; LDAP, Collection CertStores, JavaPolicy Policy; JavaLoginConfig Configuration)
SunRsaSign 1.8: Sun RSA signature provider
SunEC 1.8: Sun Elliptic Curve provider (EC, ECDSA, ECDH)
SunJSSE 1.8: Sun JSSE provider(PKCS12, SunX509/PKIX key/trust factories, SSLv3/TLSv1/TLSv1.1/TLSv1.2/TLSv1.3)
SunJCE 1.8: SunJCE Provider (implements RSA, DES, Triple DES, AES, Blowfish, ARCFOUR, RC2, PBE, Diffie-Hellman, HMAC)
SunJGSS 1.8: Sun (Kerberos v5, SPNEGO)
SunSASL 1.8: Sun SASL provider(implements client mechanisms for: DIGEST-MD5, GSSAPI, EXTERNAL, PLAIN, CRAM-MD5, NTLM; server mechanisms for: DIGEST-MD5, GSSAPI, CRAM-MD5, NTLM)
XMLDSig 1.8: XMLDSig (DOM XMLSignatureFactory; DOM KeyInfoFactory; C14N 1.0, C14N 1.1, Exclusive C14N, Base64, Enveloped, XPath, XPath2, XSLT TransformServices)
SunPCSC 1.8: Sun PC/SC provider
SunMSCAPI 1.8: Sun's Microsoft Crypto API provider
Registered MBean with ObjectName: org.apache.camel:context=camel-1,type=producers,name=HttpProducer(0x6108d23c)
Adding to producer cache with key: http://localhost:8082/hello for producer: Producer[http://localhost:8082/hello]
Starting child service on route: route1 -> Pipeline[[Channel[Log(route1)[body insertStudent request ${body}]], Channel[SetHeader(CamelHttpMethod, GET)], Channel[SetHeader(Content-Type, Simple: application/json)], Channel[SetHeader(Authorization, Simple: Basic dXNlcjpwYXNzd29yZA==)], Channel[sendTo(http://localhost:8082/hello)]]]
Starting child service on route: route1 -> Log(route1)[body insertStudent request ${body}]
Registered MBean with ObjectName: org.apache.camel:context=camel-1,type=processors,name="log1"
Starting child service on route: route1 -> Channel[Log(route1)[body insertStudent request ${body}]]
Starting child service on route: route1 -> SetHeader(CamelHttpMethod, GET)
Registered MBean with ObjectName: org.apache.camel:context=camel-1,type=processors,name="setHeader1"
Starting child service on route: route1 -> Channel[SetHeader(CamelHttpMethod, GET)]
Starting child service on route: route1 -> SetHeader(Content-Type, Simple: application/json)
Registered MBean with ObjectName: org.apache.camel:context=camel-1,type=processors,name="setHeader2"
Starting child service on route: route1 -> Channel[SetHeader(Content-Type, Simple: application/json)]
Starting child service on route: route1 -> SetHeader(Authorization, Simple: Basic dXNlcjpwYXNzd29yZA==)
Registered MBean with ObjectName: org.apache.camel:context=camel-1,type=processors,name="setHeader3"
Starting child service on route: route1 -> Channel[SetHeader(Authorization, Simple: Basic dXNlcjpwYXNzd29yZA==)]
Starting child service on route: route1 -> sendTo(http://localhost:8082/hello)
Registered MBean with ObjectName: org.apache.camel:context=camel-1,type=processors,name="to1"
Starting child service on route: route1 -> Channel[sendTo(http://localhost:8082/hello)]
Registered MBean with ObjectName: org.apache.camel:context=camel-1,type=routes,name="route1"
Added TimerListener: org.apache.camel.management.mbean.ManagedSuspendableRoute@15d02e91
Warming up route id: route2 having autoStartup=true
Starting services on route: route2
Starting child service on route: route2 -> Pipeline[[Channel[Log(route2)[body insertStudent request ${body}]], Channel[SetHeader(CamelHttpMethod, GET)], Channel[SetHeader(Content-Type, Simple: application/json)], Channel[SetHeader(Authorization, Simple: Basic dXNlcjpwYXNzd29yZA==)], Channel[sendTo(http://localhost:8082/transaction)]]]
Registered MBean with ObjectName: org.apache.camel:context=camel-1,type=producers,name=HttpProducer(0x351451b2)
Adding to producer cache with key: http://localhost:8082/transaction for producer: Producer[http://localhost:8082/transaction]
Starting child service on route: route2 -> Pipeline[[Channel[Log(route2)[body insertStudent request ${body}]], Channel[SetHeader(CamelHttpMethod, GET)], Channel[SetHeader(Content-Type, Simple: application/json)], Channel[SetHeader(Authorization, Simple: Basic dXNlcjpwYXNzd29yZA==)], Channel[sendTo(http://localhost:8082/transaction)]]]
Starting child service on route: route2 -> Log(route2)[body insertStudent request ${body}]
Registered MBean with ObjectName: org.apache.camel:context=camel-1,type=processors,name="log2"
Starting child service on route: route2 -> Channel[Log(route2)[body insertStudent request ${body}]]
Starting child service on route: route2 -> SetHeader(CamelHttpMethod, GET)
Registered MBean with ObjectName: org.apache.camel:context=camel-1,type=processors,name="setHeader4"
Starting child service on route: route2 -> Channel[SetHeader(CamelHttpMethod, GET)]
Starting child service on route: route2 -> SetHeader(Content-Type, Simple: application/json)
Registered MBean with ObjectName: org.apache.camel:context=camel-1,type=processors,name="setHeader5"
Starting child service on route: route2 -> Channel[SetHeader(Content-Type, Simple: application/json)]
Starting child service on route: route2 -> SetHeader(Authorization, Simple: Basic dXNlcjpwYXNzd29yZA==)
Registered MBean with ObjectName: org.apache.camel:context=camel-1,type=processors,name="setHeader6"
Starting child service on route: route2 -> Channel[SetHeader(Authorization, Simple: Basic dXNlcjpwYXNzd29yZA==)]
Starting child service on route: route2 -> sendTo(http://localhost:8082/transaction)
Registered MBean with ObjectName: org.apache.camel:context=camel-1,type=processors,name="to2"
Starting child service on route: route2 -> Channel[sendTo(http://localhost:8082/transaction)]
Registered MBean with ObjectName: org.apache.camel:context=camel-1,type=routes,name="route2"
Added TimerListener: org.apache.camel.management.mbean.ManagedSuspendableRoute@39cc8ff
Warming up route id: route3 having autoStartup=true
Starting services on route: route3
Starting child service on route: route3 -> Pipeline[[Channel[Log(route3)[body insertStudent request ${body}]], Channel[SetHeader(CamelHttpMethod, GET)], Channel[SetHeader(Content-Type, Simple: application/json)], Channel[SetHeader(Authorization, Simple: Basic dXNlcjpwYXNzd29yZA==)], Channel[sendTo(http://localhost:8082/transaction/SEPA)]]]
Registered MBean with ObjectName: org.apache.camel:context=camel-1,type=producers,name=HttpProducer(0xc254402)
Adding to producer cache with key: http://localhost:8082/transaction/SEPA for producer: Producer[http://localhost:8082/transaction/SEPA]
Starting child service on route: route3 -> Pipeline[[Channel[Log(route3)[body insertStudent request ${body}]], Channel[SetHeader(CamelHttpMethod, GET)], Channel[SetHeader(Content-Type, Simple: application/json)], Channel[SetHeader(Authorization, Simple: Basic dXNlcjpwYXNzd29yZA==)], Channel[sendTo(http://localhost:8082/transaction/SEPA)]]]
Starting child service on route: route3 -> Log(route3)[body insertStudent request ${body}]
Registered MBean with ObjectName: org.apache.camel:context=camel-1,type=processors,name="log3"
Starting child service on route: route3 -> Channel[Log(route3)[body insertStudent request ${body}]]
Starting child service on route: route3 -> SetHeader(CamelHttpMethod, GET)
Registered MBean with ObjectName: org.apache.camel:context=camel-1,type=processors,name="setHeader7"
Starting child service on route: route3 -> Channel[SetHeader(CamelHttpMethod, GET)]
Starting child service on route: route3 -> SetHeader(Content-Type, Simple: application/json)
Registered MBean with ObjectName: org.apache.camel:context=camel-1,type=processors,name="setHeader8"
Starting child service on route: route3 -> Channel[SetHeader(Content-Type, Simple: application/json)]
Starting child service on route: route3 -> SetHeader(Authorization, Simple: Basic dXNlcjpwYXNzd29yZA==)
Registered MBean with ObjectName: org.apache.camel:context=camel-1,type=processors,name="setHeader9"
Starting child service on route: route3 -> Channel[SetHeader(Authorization, Simple: Basic dXNlcjpwYXNzd29yZA==)]
Starting child service on route: route3 -> sendTo(http://localhost:8082/transaction/SEPA)
Registered MBean with ObjectName: org.apache.camel:context=camel-1,type=processors,name="to3"
Starting child service on route: route3 -> Channel[sendTo(http://localhost:8082/transaction/SEPA)]
Registered MBean with ObjectName: org.apache.camel:context=camel-1,type=routes,name="route3"
Added TimerListener: org.apache.camel.management.mbean.ManagedSuspendableRoute@42d7ceef
Warming up route id: route4 having autoStartup=true
Starting services on route: route4
Starting child service on route: route4 -> Pipeline[[Channel[Log(route4)[body insertStudent request ${body}]], Channel[SetHeader(CamelHttpMethod, GET)], Channel[SetHeader(Content-Type, Simple: application/json)], Channel[SetHeader(Authorization, Simple: Basic dXNlcjpwYXNzd29yZA==)], Channel[sendTo(http://localhost:8082/transaction/SEPA/amount)]]]
Registered MBean with ObjectName: org.apache.camel:context=camel-1,type=producers,name=HttpProducer(0x7525d0e3)
Adding to producer cache with key: http://localhost:8082/transaction/SEPA/amount for producer: Producer[http://localhost:8082/transaction/SEPA/amount]
Starting child service on route: route4 -> Pipeline[[Channel[Log(route4)[body insertStudent request ${body}]], Channel[SetHeader(CamelHttpMethod, GET)], Channel[SetHeader(Content-Type, Simple: application/json)], Channel[SetHeader(Authorization, Simple: Basic dXNlcjpwYXNzd29yZA==)], Channel[sendTo(http://localhost:8082/transaction/SEPA/amount)]]]
Starting child service on route: route4 -> Log(route4)[body insertStudent request ${body}]
Registered MBean with ObjectName: org.apache.camel:context=camel-1,type=processors,name="log4"
Starting child service on route: route4 -> Channel[Log(route4)[body insertStudent request ${body}]]
Starting child service on route: route4 -> SetHeader(CamelHttpMethod, GET)
Registered MBean with ObjectName: org.apache.camel:context=camel-1,type=processors,name="setHeader10"
Starting child service on route: route4 -> Channel[SetHeader(CamelHttpMethod, GET)]
Starting child service on route: route4 -> SetHeader(Content-Type, Simple: application/json)
Registered MBean with ObjectName: org.apache.camel:context=camel-1,type=processors,name="setHeader11"
Starting child service on route: route4 -> Channel[SetHeader(Content-Type, Simple: application/json)]
Starting child service on route: route4 -> SetHeader(Authorization, Simple: Basic dXNlcjpwYXNzd29yZA==)
Registered MBean with ObjectName: org.apache.camel:context=camel-1,type=processors,name="setHeader12"
Starting child service on route: route4 -> Channel[SetHeader(Authorization, Simple: Basic dXNlcjpwYXNzd29yZA==)]
Starting child service on route: route4 -> sendTo(http://localhost:8082/transaction/SEPA/amount)
Registered MBean with ObjectName: org.apache.camel:context=camel-1,type=processors,name="to4"
Starting child service on route: route4 -> Channel[sendTo(http://localhost:8082/transaction/SEPA/amount)]
Registered MBean with ObjectName: org.apache.camel:context=camel-1,type=routes,name="route4"
Added TimerListener: org.apache.camel.management.mbean.ManagedSuspendableRoute@23d1fcf
Load performance statistics disabled
Starting producer: Producer[http://localhost:8082/hello]
Starting producer: Producer[http://localhost:8082/transaction]
Starting producer: Producer[http://localhost:8082/transaction/SEPA]
Starting producer: Producer[http://localhost:8082/transaction/SEPA/amount]
Route: route1 >>> EventDrivenConsumerRoute[direct://hello -> Pipeline[[Channel[Log(route1)[body insertStudent request ${body}]], Channel[SetHeader(CamelHttpMethod, GET)], Channel[SetHeader(Content-Type, Simple: application/json)], Channel[SetHeader(Authorization, Simple: Basic dXNlcjpwYXNzd29yZA==)], Channel[sendTo(http://localhost:8082/hello)]]]]
Starting consumer (order: 1000) on route: route1
Registered MBean with ObjectName: org.apache.camel:context=camel-1,type=consumers,name=DirectConsumer(0x6df686ac)
Starting consumer: Consumer[direct://hello]
Route: route1 started and consuming from: direct://hello
Route: route2 >>> EventDrivenConsumerRoute[direct://transaction -> Pipeline[[Channel[Log(route2)[body insertStudent request ${body}]], Channel[SetHeader(CamelHttpMethod, GET)], Channel[SetHeader(Content-Type, Simple: application/json)], Channel[SetHeader(Authorization, Simple: Basic dXNlcjpwYXNzd29yZA==)], Channel[sendTo(http://localhost:8082/transaction)]]]]
Starting consumer (order: 1001) on route: route2
Registered MBean with ObjectName: org.apache.camel:context=camel-1,type=consumers,name=DirectConsumer(0x5298583b)
Starting consumer: Consumer[direct://transaction]
Route: route2 started and consuming from: direct://transaction
Route: route3 >>> EventDrivenConsumerRoute[direct://transactiontype -> Pipeline[[Channel[Log(route3)[body insertStudent request ${body}]], Channel[SetHeader(CamelHttpMethod, GET)], Channel[SetHeader(Content-Type, Simple: application/json)], Channel[SetHeader(Authorization, Simple: Basic dXNlcjpwYXNzd29yZA==)], Channel[sendTo(http://localhost:8082/transaction/SEPA)]]]]
Starting consumer (order: 1002) on route: route3
Registered MBean with ObjectName: org.apache.camel:context=camel-1,type=consumers,name=DirectConsumer(0x4e21560d)
Starting consumer: Consumer[direct://transactiontype]
Route: route3 started and consuming from: direct://transactiontype
Route: route4 >>> EventDrivenConsumerRoute[direct://transactiontypeamount -> Pipeline[[Channel[Log(route4)[body insertStudent request ${body}]], Channel[SetHeader(CamelHttpMethod, GET)], Channel[SetHeader(Content-Type, Simple: application/json)], Channel[SetHeader(Authorization, Simple: Basic dXNlcjpwYXNzd29yZA==)], Channel[sendTo(http://localhost:8082/transaction/SEPA/amount)]]]]
Starting consumer (order: 1003) on route: route4
Registered MBean with ObjectName: org.apache.camel:context=camel-1,type=consumers,name=DirectConsumer(0x5861fa51)
Starting consumer: Consumer[direct://transactiontypeamount]
Route: route4 started and consuming from: direct://transactiontypeamount
Total 4 routes, of which 4 are started
Apache Camel 2.25.3 (CamelContext: camel-1) started in 0.521 seconds
start() took 523 millis
onApplicationEvent: org.springframework.context.event.ContextRefreshedEvent[source=org.springframework.context.support.ClassPathXmlApplicationContext@2e4e38eb, started on Thu Mar 25 11:42:37 CST 2021]
Starting producer: Producer[direct://transactiontypeamount]
Adding to producer cache with key: direct://transactiontypeamount for producer: Producer[direct://transactiontypeamount]
>>>> direct://transactiontypeamount Exchange[]
body insertStudent request 
>>>> http://localhost:8082/transaction/SEPA/amount Exchange[ID-DESKTOP-J98PTAC-1616694158799-0-1]
Executing http GET method: http://localhost:8082/transaction/SEPA/amount
HttpConnectionManager.getConnection:  config = HostConfiguration[host=http://localhost:8082], timeout = 0
Allocating new connection, hostConfig=HostConfiguration[host=http://localhost:8082]
Open connection to localhost:8082
>> "GET /transaction/SEPA/amount HTTP/1.1[\r][\n]"
Adding Host request header
>> "Authorization: Basic dXNlcjpwYXNzd29yZA==[\r][\n]"
>> "breadcrumbId: ID-DESKTOP-J98PTAC-1616694158799-0-1[\r][\n]"
>> "User-Agent: Jakarta Commons-HttpClient/3.1[\r][\n]"
>> "Host: localhost:8082[\r][\n]"
>> "[\r][\n]"
/transaction/SEPA/amount at position 1 of 14 in additional filter chain; firing Filter: 'SecurityContextPersistenceFilter'
No HttpSession currently exists
No SecurityContext was available from the HttpSession: null. A new one will be created.
/transaction/SEPA/amount at position 2 of 14 in additional filter chain; firing Filter: 'WebAsyncManagerIntegrationFilter'
/transaction/SEPA/amount at position 3 of 14 in additional filter chain; firing Filter: 'HeaderWriterFilter'
/transaction/SEPA/amount at position 4 of 14 in additional filter chain; firing Filter: 'CsrfFilter'
/transaction/SEPA/amount at position 5 of 14 in additional filter chain; firing Filter: 'LogoutFilter'
Request 'GET /transaction/SEPA/amount' doesn't match 'POST /logout'
/transaction/SEPA/amount at position 6 of 14 in additional filter chain; firing Filter: 'UsernamePasswordAuthenticationFilter'
Request 'GET /transaction/SEPA/amount' doesn't match 'POST /login'
/transaction/SEPA/amount at position 7 of 14 in additional filter chain; firing Filter: 'DefaultLoginPageGeneratingFilter'
/transaction/SEPA/amount at position 8 of 14 in additional filter chain; firing Filter: 'BasicAuthenticationFilter'
Basic Authentication Authorization header found for user 'user'
Authentication attempt using org.springframework.security.authentication.dao.DaoAuthenticationProvider
Authentication success: org.springframework.security.authentication.UsernamePasswordAuthenticationToken@442b7c85: Principal: org.springframework.security.core.userdetails.User@36ebcb: Username: user; Password: [PROTECTED]; Enabled: true; AccountNonExpired: true; credentialsNonExpired: true; AccountNonLocked: true; Granted Authorities: ROLE_USER; Credentials: [PROTECTED]; Authenticated: true; Details: org.springframework.security.web.authentication.WebAuthenticationDetails@957e: RemoteIpAddress: 127.0.0.1; SessionId: null; Granted Authorities: ROLE_USER
/transaction/SEPA/amount at position 9 of 14 in additional filter chain; firing Filter: 'RequestCacheAwareFilter'
saved request doesn't match
/transaction/SEPA/amount at position 10 of 14 in additional filter chain; firing Filter: 'SecurityContextHolderAwareRequestFilter'
/transaction/SEPA/amount at position 11 of 14 in additional filter chain; firing Filter: 'AnonymousAuthenticationFilter'
SecurityContextHolder not populated with anonymous token, as it already contained: 'org.springframework.security.authentication.UsernamePasswordAuthenticationToken@442b7c85: Principal: org.springframework.security.core.userdetails.User@36ebcb: Username: user; Password: [PROTECTED]; Enabled: true; AccountNonExpired: true; credentialsNonExpired: true; AccountNonLocked: true; Granted Authorities: ROLE_USER; Credentials: [PROTECTED]; Authenticated: true; Details: org.springframework.security.web.authentication.WebAuthenticationDetails@957e: RemoteIpAddress: 127.0.0.1; SessionId: null; Granted Authorities: ROLE_USER'
/transaction/SEPA/amount at position 12 of 14 in additional filter chain; firing Filter: 'SessionManagementFilter'
Delegating to org.springframework.security.web.csrf.CsrfAuthenticationStrategy@1fefdd6b
Delegating to org.springframework.security.web.authentication.session.ChangeSessionIdAuthenticationStrategy@15f2062d
HttpSession being created as SecurityContext is non-default
SecurityContext 'org.springframework.security.core.context.SecurityContextImpl@442b7c85: Authentication: org.springframework.security.authentication.UsernamePasswordAuthenticationToken@442b7c85: Principal: org.springframework.security.core.userdetails.User@36ebcb: Username: user; Password: [PROTECTED]; Enabled: true; AccountNonExpired: true; credentialsNonExpired: true; AccountNonLocked: true; Granted Authorities: ROLE_USER; Credentials: [PROTECTED]; Authenticated: true; Details: org.springframework.security.web.authentication.WebAuthenticationDetails@957e: RemoteIpAddress: 127.0.0.1; SessionId: null; Granted Authorities: ROLE_USER' stored to HttpSession: 'org.eclipse.jetty.server.session.HashedSession:7tnj7lwj28d914zxf4mr2od3m@568076834
/transaction/SEPA/amount at position 13 of 14 in additional filter chain; firing Filter: 'ExceptionTranslationFilter'
/transaction/SEPA/amount at position 14 of 14 in additional filter chain; firing Filter: 'FilterSecurityInterceptor'
Secure object: FilterInvocation: URL: /transaction/SEPA/amount; Attributes: [authenticated]
Previously Authenticated: org.springframework.security.authentication.UsernamePasswordAuthenticationToken@442b7c85: Principal: org.springframework.security.core.userdetails.User@36ebcb: Username: user; Password: [PROTECTED]; Enabled: true; AccountNonExpired: true; credentialsNonExpired: true; AccountNonLocked: true; Granted Authorities: ROLE_USER; Credentials: [PROTECTED]; Authenticated: true; Details: org.springframework.security.web.authentication.WebAuthenticationDetails@957e: RemoteIpAddress: 127.0.0.1; SessionId: null; Granted Authorities: ROLE_USER
Voter: org.springframework.security.web.access.expression.WebExpressionVoter@8161218, returned: 1
Authorization successful
RunAsManager did not change Authentication object
/transaction/SEPA/amount reached end of additional filter chain; proceeding with original chain
GET "/transaction/SEPA/amount", parameters={}
Mapped to public java.lang.Double com.backbaseproject.api.controller.BackbaseApplicationController.getTotalAmountByTransactionType(java.lang.String)
getTotalAmountByTransactionType method started
getTotalAmountByTransactionType method started
getTransactionList method started
Using 'application/json', given [*/*] and supported [application/json, application/*+json]
Writing [25.799999999999997]
Not injecting HSTS header since it did not match the requestMatcher org.springframework.security.web.header.writers.HstsHeaderWriter$SecureRequestMatcher@5ae9ca76
SecurityContext 'org.springframework.security.core.context.SecurityContextImpl@442b7c85: Authentication: org.springframework.security.authentication.UsernamePasswordAuthenticationToken@442b7c85: Principal: org.springframework.security.core.userdetails.User@36ebcb: Username: user; Password: [PROTECTED]; Enabled: true; AccountNonExpired: true; credentialsNonExpired: true; AccountNonLocked: true; Granted Authorities: ROLE_USER; Credentials: [PROTECTED]; Authenticated: true; Details: org.springframework.security.web.authentication.WebAuthenticationDetails@957e: RemoteIpAddress: 127.0.0.1; SessionId: null; Granted Authorities: ROLE_USER' stored to HttpSession: 'org.eclipse.jetty.server.session.HashedSession:7tnj7lwj28d914zxf4mr2od3m@568076834
<< "HTTP/1.1 200 OK[\r][\n]"
<< "HTTP/1.1 200 OK[\r][\n]"
<< "Date: Thu, 25 Mar 2021 17:42:39 GMT[\r][\n]"
<< "Set-Cookie: JSESSIONID=7tnj7lwj28d914zxf4mr2od3m;Path=/[\r][\n]"
<< "Expires: Thu, 01 Jan 1970 00:00:00 GMT[\r][\n]"
<< "Content-Type: application/json;charset=UTF-8[\r][\n]"
<< "X-XSS-Protection: 1; mode=block[\r][\n]"
<< "X-Frame-Options: DENY[\r][\n]"
<< "X-Content-Type-Options: nosniff[\r][\n]"
<< "Transfer-Encoding: chunked[\r][\n]"
<< "Server: Jetty(9.2.1.v20140609)[\r][\n]"
<< "[\r][\n]"
Completed 200 OK
Chain processed normally
SecurityContextHolder now cleared, as request processing completed
Cookie accepted: "$Version=0; JSESSIONID=7tnj7lwj28d914zxf4mr2od3m; $Path=/"
Http responseCode: 200
<< "1"
<< "2"
<< "[\r]"
<< "[\n]"
<< "25.799999999999997"
<< "[\r]"
<< "[\n]"
<< "0"
<< "[\r]"
<< "[\n]"
<< "[\r]"
<< "[\n]"
<< "[\r][\n]"
Resorting to protocol version default close connection policy
Should NOT close connection, using HTTP/1.1
Releasing connection back to connection manager.
Freeing connection, hostConfig=HostConfiguration[host=http://localhost:8082]
Adding connection at: 1616694161888
Notifying no-one, there are no waiting threads
Apache Camel 2.25.3 (CamelContext: camel-1) is shutting down
Starting to graceful shutdown 4 routes (timeout 300 seconds)
Created new ThreadPool for source: org.apache.camel.impl.DefaultShutdownStrategy@4792f930 with name: ShutdownTask. -> org.apache.camel.util.concurrent.RejectableThreadPoolExecutor@57f9ff96[Running, pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0][ShutdownTask]
There are 4 routes to shutdown
Route: route4 suspension deferred.
Route: route3 suspension deferred.
Route: route2 suspension deferred.
Route: route1 suspension deferred.
Route: route4 preparing to shutdown complete.
Route: route3 preparing to shutdown complete.
Route: route2 preparing to shutdown complete.
Route: route1 preparing to shutdown complete.
Stopping consumer: Consumer[direct://transactiontypeamount]
Stopping producer: Producer[http://localhost:8082/transaction/SEPA/amount]
Unregistered MBean with ObjectName: org.apache.camel:context=camel-1,type=producers,name=HttpProducer(0x7525d0e3)
Route: route4 shutdown complete, was consuming from: direct://transactiontypeamount
Stopping consumer: Consumer[direct://transactiontype]
Stopping producer: Producer[http://localhost:8082/transaction/SEPA]
Unregistered MBean with ObjectName: org.apache.camel:context=camel-1,type=producers,name=HttpProducer(0xc254402)
Route: route3 shutdown complete, was consuming from: direct://transactiontype
Stopping consumer: Consumer[direct://transaction]
Stopping producer: Producer[http://localhost:8082/transaction]
Unregistered MBean with ObjectName: org.apache.camel:context=camel-1,type=producers,name=HttpProducer(0x351451b2)
Route: route2 shutdown complete, was consuming from: direct://transaction
Stopping consumer: Consumer[direct://hello]
Stopping producer: Producer[http://localhost:8082/hello]
Unregistered MBean with ObjectName: org.apache.camel:context=camel-1,type=producers,name=HttpProducer(0x6108d23c)
Route: route1 shutdown complete, was consuming from: direct://hello
Graceful shutdown of 4 routes completed in 0 seconds
Shutting down with no inflight threads.
Removed TimerListener: org.apache.camel.management.mbean.ManagedSuspendableRoute@23d1fcf
Unregistered MBean with ObjectName: org.apache.camel:context=camel-1,type=routes,name="route4"
Stopping services on route: route4
Shutting down child service on route: route4 -> Consumer[direct://transactiontypeamount]
Unregistered MBean with ObjectName: org.apache.camel:context=camel-1,type=consumers,name=DirectConsumer(0x5861fa51)
Shutting down child service on route: route4 -> Pipeline[[Channel[Log(route4)[body insertStudent request ${body}]], Channel[SetHeader(CamelHttpMethod, GET)], Channel[SetHeader(Content-Type, Simple: application/json)], Channel[SetHeader(Authorization, Simple: Basic dXNlcjpwYXNzd29yZA==)], Channel[sendTo(http://localhost:8082/transaction/SEPA/amount)]]]
Shutting down child service on route: route4 -> Pipeline[[Channel[Log(route4)[body insertStudent request ${body}]], Channel[SetHeader(CamelHttpMethod, GET)], Channel[SetHeader(Content-Type, Simple: application/json)], Channel[SetHeader(Authorization, Simple: Basic dXNlcjpwYXNzd29yZA==)], Channel[sendTo(http://localhost:8082/transaction/SEPA/amount)]]]
Shutting down child service on route: route4 -> Log(route4)[body insertStudent request ${body}]
Shutting down child service on route: route4 -> Channel[Log(route4)[body insertStudent request ${body}]]
Shutting down child service on route: route4 -> SetHeader(CamelHttpMethod, GET)
Shutting down child service on route: route4 -> Channel[SetHeader(CamelHttpMethod, GET)]
Shutting down child service on route: route4 -> SetHeader(Content-Type, Simple: application/json)
Shutting down child service on route: route4 -> Channel[SetHeader(Content-Type, Simple: application/json)]
Shutting down child service on route: route4 -> SetHeader(Authorization, Simple: Basic dXNlcjpwYXNzd29yZA==)
Shutting down child service on route: route4 -> Channel[SetHeader(Authorization, Simple: Basic dXNlcjpwYXNzd29yZA==)]
Shutting down child service on route: route4 -> sendTo(http://localhost:8082/transaction/SEPA/amount)
Shutting down child service on route: route4 -> Channel[sendTo(http://localhost:8082/transaction/SEPA/amount)]
Shutting down services on route: route4
Removed TimerListener: org.apache.camel.management.mbean.ManagedSuspendableRoute@42d7ceef
Unregistered MBean with ObjectName: org.apache.camel:context=camel-1,type=routes,name="route3"
Stopping services on route: route3
Shutting down child service on route: route3 -> Consumer[direct://transactiontype]
Unregistered MBean with ObjectName: org.apache.camel:context=camel-1,type=consumers,name=DirectConsumer(0x4e21560d)
Shutting down child service on route: route3 -> Pipeline[[Channel[Log(route3)[body insertStudent request ${body}]], Channel[SetHeader(CamelHttpMethod, GET)], Channel[SetHeader(Content-Type, Simple: application/json)], Channel[SetHeader(Authorization, Simple: Basic dXNlcjpwYXNzd29yZA==)], Channel[sendTo(http://localhost:8082/transaction/SEPA)]]]
Shutting down child service on route: route3 -> Pipeline[[Channel[Log(route3)[body insertStudent request ${body}]], Channel[SetHeader(CamelHttpMethod, GET)], Channel[SetHeader(Content-Type, Simple: application/json)], Channel[SetHeader(Authorization, Simple: Basic dXNlcjpwYXNzd29yZA==)], Channel[sendTo(http://localhost:8082/transaction/SEPA)]]]
Shutting down child service on route: route3 -> Log(route3)[body insertStudent request ${body}]
Shutting down child service on route: route3 -> Channel[Log(route3)[body insertStudent request ${body}]]
Shutting down child service on route: route3 -> SetHeader(CamelHttpMethod, GET)
Shutting down child service on route: route3 -> Channel[SetHeader(CamelHttpMethod, GET)]
Shutting down child service on route: route3 -> SetHeader(Content-Type, Simple: application/json)
Shutting down child service on route: route3 -> Channel[SetHeader(Content-Type, Simple: application/json)]
Shutting down child service on route: route3 -> SetHeader(Authorization, Simple: Basic dXNlcjpwYXNzd29yZA==)
Shutting down child service on route: route3 -> Channel[SetHeader(Authorization, Simple: Basic dXNlcjpwYXNzd29yZA==)]
Shutting down child service on route: route3 -> sendTo(http://localhost:8082/transaction/SEPA)
Shutting down child service on route: route3 -> Channel[sendTo(http://localhost:8082/transaction/SEPA)]
Shutting down services on route: route3
Removed TimerListener: org.apache.camel.management.mbean.ManagedSuspendableRoute@39cc8ff
Unregistered MBean with ObjectName: org.apache.camel:context=camel-1,type=routes,name="route2"
Stopping services on route: route2
Shutting down child service on route: route2 -> Consumer[direct://transaction]
Unregistered MBean with ObjectName: org.apache.camel:context=camel-1,type=consumers,name=DirectConsumer(0x5298583b)
Shutting down child service on route: route2 -> Pipeline[[Channel[Log(route2)[body insertStudent request ${body}]], Channel[SetHeader(CamelHttpMethod, GET)], Channel[SetHeader(Content-Type, Simple: application/json)], Channel[SetHeader(Authorization, Simple: Basic dXNlcjpwYXNzd29yZA==)], Channel[sendTo(http://localhost:8082/transaction)]]]
Shutting down child service on route: route2 -> Pipeline[[Channel[Log(route2)[body insertStudent request ${body}]], Channel[SetHeader(CamelHttpMethod, GET)], Channel[SetHeader(Content-Type, Simple: application/json)], Channel[SetHeader(Authorization, Simple: Basic dXNlcjpwYXNzd29yZA==)], Channel[sendTo(http://localhost:8082/transaction)]]]
Shutting down child service on route: route2 -> Log(route2)[body insertStudent request ${body}]
Shutting down child service on route: route2 -> Channel[Log(route2)[body insertStudent request ${body}]]
Shutting down child service on route: route2 -> SetHeader(CamelHttpMethod, GET)
Shutting down child service on route: route2 -> Channel[SetHeader(CamelHttpMethod, GET)]
Shutting down child service on route: route2 -> SetHeader(Content-Type, Simple: application/json)
Shutting down child service on route: route2 -> Channel[SetHeader(Content-Type, Simple: application/json)]
Shutting down child service on route: route2 -> SetHeader(Authorization, Simple: Basic dXNlcjpwYXNzd29yZA==)
Shutting down child service on route: route2 -> Channel[SetHeader(Authorization, Simple: Basic dXNlcjpwYXNzd29yZA==)]
Shutting down child service on route: route2 -> sendTo(http://localhost:8082/transaction)
Shutting down child service on route: route2 -> Channel[sendTo(http://localhost:8082/transaction)]
Shutting down services on route: route2
Removed TimerListener: org.apache.camel.management.mbean.ManagedSuspendableRoute@15d02e91
Unregistered MBean with ObjectName: org.apache.camel:context=camel-1,type=routes,name="route1"
Stopping services on route: route1
Shutting down child service on route: route1 -> Consumer[direct://hello]
Unregistered MBean with ObjectName: org.apache.camel:context=camel-1,type=consumers,name=DirectConsumer(0x6df686ac)
Shutting down child service on route: route1 -> Pipeline[[Channel[Log(route1)[body insertStudent request ${body}]], Channel[SetHeader(CamelHttpMethod, GET)], Channel[SetHeader(Content-Type, Simple: application/json)], Channel[SetHeader(Authorization, Simple: Basic dXNlcjpwYXNzd29yZA==)], Channel[sendTo(http://localhost:8082/hello)]]]
Shutting down child service on route: route1 -> Pipeline[[Channel[Log(route1)[body insertStudent request ${body}]], Channel[SetHeader(CamelHttpMethod, GET)], Channel[SetHeader(Content-Type, Simple: application/json)], Channel[SetHeader(Authorization, Simple: Basic dXNlcjpwYXNzd29yZA==)], Channel[sendTo(http://localhost:8082/hello)]]]
Shutting down child service on route: route1 -> Log(route1)[body insertStudent request ${body}]
Shutting down child service on route: route1 -> Channel[Log(route1)[body insertStudent request ${body}]]
Shutting down child service on route: route1 -> SetHeader(CamelHttpMethod, GET)
Shutting down child service on route: route1 -> Channel[SetHeader(CamelHttpMethod, GET)]
Shutting down child service on route: route1 -> SetHeader(Content-Type, Simple: application/json)
Shutting down child service on route: route1 -> Channel[SetHeader(Content-Type, Simple: application/json)]
Shutting down child service on route: route1 -> SetHeader(Authorization, Simple: Basic dXNlcjpwYXNzd29yZA==)
Shutting down child service on route: route1 -> Channel[SetHeader(Authorization, Simple: Basic dXNlcjpwYXNzd29yZA==)]
Shutting down child service on route: route1 -> sendTo(http://localhost:8082/hello)
Shutting down child service on route: route1 -> Channel[sendTo(http://localhost:8082/hello)]
Shutting down services on route: route1
Clearing simple language predicate cache[size=0, hits=0, misses=0, evicted=0]
Clearing simple language expression cache[size=4, hits=3, misses=4, evicted=0]
Unregistered MBean with ObjectName: org.apache.camel:context=camel-1,type=routecontrollers,name="camel-1"
Unregistered MBean with ObjectName: org.apache.camel:context=camel-1,type=health,name="camel-1"
Removed TimerListener: org.apache.camel.management.mbean.ManagedCamelContext@6b0fa9cb
Unregistered MBean with ObjectName: org.apache.camel:context=camel-1,type=context,name="camel-1"
Forcing shutdown of ExecutorService: org.apache.camel.util.concurrent.RejectableThreadPoolExecutor@57f9ff96[Running, pool size = 1, active threads = 0, queued tasks = 0, completed tasks = 1][ShutdownTask]
Shutting down with no inflight exchanges.
Stopping service pool: org.apache.camel.impl.SharedPollingConsumerServicePool@44a47e55
Stopping service pool: org.apache.camel.impl.SharedProducerServicePool@16235bb9
Unregistered MBean with ObjectName: org.apache.camel:context=camel-1,type=processors,name="log3"
Unregistered MBean with ObjectName: org.apache.camel:context=camel-1,type=endpoints,name="direct://hello"
Unregistered MBean with ObjectName: org.apache.camel:context=camel-1,type=processors,name="setHeader5"
Unregistered MBean with ObjectName: org.apache.camel:context=camel-1,type=services,name=DefaultEndpointRegistry
Unregistered MBean with ObjectName: org.apache.camel:context=camel-1,type=processors,name="log2"
Unregistered MBean with ObjectName: org.apache.camel:context=camel-1,type=endpoints,name="http://localhost:8082/hello"
Unregistered MBean with ObjectName: org.apache.camel:context=camel-1,type=endpoints,name="direct://transaction"
Unregistered MBean with ObjectName: org.apache.camel:context=camel-1,type=processors,name="setHeader10"
Unregistered MBean with ObjectName: org.apache.camel:context=camel-1,type=services,name=DefaultInflightRepository
Unregistered MBean with ObjectName: org.apache.camel:context=camel-1,type=endpoints,name="http://localhost:8082/transaction/SEPA"
Unregistered MBean with ObjectName: org.apache.camel:context=camel-1,type=services,name=DefaultExecutorServiceManager
Unregistered MBean with ObjectName: org.apache.camel:context=camel-1,type=processors,name="log1"
Unregistered MBean with ObjectName: org.apache.camel:context=camel-1,type=errorhandlers,name="DefaultErrorHandlerBuilder(ref:CamelDefaultErrorHandlerBuilder)"
Unregistered MBean with ObjectName: org.apache.camel:context=camel-1,type=endpoints,name="direct://transactiontypeamount"
Unregistered MBean with ObjectName: org.apache.camel:context=camel-1,type=processors,name="setHeader4"
Unregistered MBean with ObjectName: org.apache.camel:context=camel-1,type=processors,name="setHeader7"
Unregistered MBean with ObjectName: org.apache.camel:context=camel-1,type=processors,name="setHeader11"
Unregistered MBean with ObjectName: org.apache.camel:context=camel-1,type=processors,name="to1"
Unregistered MBean with ObjectName: org.apache.camel:context=camel-1,type=tracer,name=BacklogTracer
Unregistered MBean with ObjectName: org.apache.camel:context=camel-1,type=processors,name="to4"
Unregistered MBean with ObjectName: org.apache.camel:context=camel-1,type=services,name=DefaultAsyncProcessorAwaitManager
Unregistered MBean with ObjectName: org.apache.camel:context=camel-1,type=tracer,name=BacklogDebugger
Unregistered MBean with ObjectName: org.apache.camel:context=camel-1,type=processors,name="setHeader2"
Unregistered MBean with ObjectName: org.apache.camel:context=camel-1,type=processors,name="to3"
Unregistered MBean with ObjectName: org.apache.camel:context=camel-1,type=endpoints,name="direct://transactiontype"
Unregistered MBean with ObjectName: org.apache.camel:context=camel-1,type=processors,name="setHeader9"
Unregistered MBean with ObjectName: org.apache.camel:context=camel-1,type=processors,name="to2"
Unregistered MBean with ObjectName: org.apache.camel:context=camel-1,type=services,name=DefaultRuntimeCamelCatalog
Unregistered MBean with ObjectName: org.apache.camel:context=camel-1,type=services,name=DefaultValidatorRegistry
Unregistered MBean with ObjectName: org.apache.camel:context=camel-1,type=services,name=DefaultTypeConverter
Unregistered MBean with ObjectName: org.apache.camel:context=camel-1,type=processors,name="setHeader8"
Unregistered MBean with ObjectName: org.apache.camel:context=camel-1,type=components,name="spring-event"
Unregistered MBean with ObjectName: org.apache.camel:context=camel-1,type=components,name="http"
Unregistered MBean with ObjectName: org.apache.camel:context=camel-1,type=endpoints,name="http://localhost:8082/transaction"
Unregistered MBean with ObjectName: org.apache.camel:context=camel-1,type=processors,name="setHeader3"
Unregistered MBean with ObjectName: org.apache.camel:context=camel-1,type=services,name=DefaultTransformerRegistry
Unregistered MBean with ObjectName: org.apache.camel:context=camel-1,type=processors,name="setHeader1"
Unregistered MBean with ObjectName: org.apache.camel:context=camel-1,type=processors,name="setHeader6"
Unregistered MBean with ObjectName: org.apache.camel:context=camel-1,type=processors,name="log4"
Unregistered MBean with ObjectName: org.apache.camel:context=camel-1,type=services,name=DefaultShutdownStrategy
Unregistered MBean with ObjectName: org.apache.camel:context=camel-1,type=components,name="direct"
Unregistered MBean with ObjectName: org.apache.camel:context=camel-1,type=processors,name="setHeader12"
Unregistered MBean with ObjectName: org.apache.camel:context=camel-1,type=endpoints,name="http://localhost:8082/transaction/SEPA/amount"
Unregistered MBean with ObjectName: org.apache.camel:context=camel-1,type=services,name=DefaultRestRegistry
Clearing cache[size=23, hits=36, misses=23, evicted=0]
Clearing cache[size=64, hits=158, misses=64, evicted=0]
Apache Camel 2.25.3 (CamelContext: camel-1) uptime 3.040 seconds
Apache Camel 2.25.3 (CamelContext: camel-1) is shutdown in 0.025 seconds
Using 'text/plain', given [*/*] and supported [text/plain, */*, application/json, application/*+json]
Writing ["25.799999999999997"]
Not injecting HSTS header since it did not match the requestMatcher org.springframework.security.web.header.writers.HstsHeaderWriter$SecureRequestMatcher@5ae9ca76
SecurityContext 'org.springframework.security.core.context.SecurityContextImpl@442b5a9f: Authentication: org.springframework.security.authentication.UsernamePasswordAuthenticationToken@442b5a9f: Principal: org.springframework.security.core.userdetails.User@36ebcb: Username: user; Password: [PROTECTED]; Enabled: true; AccountNonExpired: true; credentialsNonExpired: true; AccountNonLocked: true; Granted Authorities: ROLE_USER; Credentials: [PROTECTED]; Authenticated: true; Details: org.springframework.security.web.authentication.WebAuthenticationDetails@b364: RemoteIpAddress: 0:0:0:0:0:0:0:1; SessionId: null; Granted Authorities: ROLE_USER' stored to HttpSession: 'org.eclipse.jetty.server.session.HashedSession:1bklsed1sufxn1qd0n1t1sgncx@1339472428
Completed 200 OK
Chain processed normally
SecurityContextHolder now cleared, as request processing completed
/swagger-ui at position 1 of 14 in additional filter chain; firing Filter: 'SecurityContextPersistenceFilter'
No HttpSession currently exists
No SecurityContext was available from the HttpSession: null. A new one will be created.
/swagger-ui at position 2 of 14 in additional filter chain; firing Filter: 'WebAsyncManagerIntegrationFilter'
/swagger-ui at position 3 of 14 in additional filter chain; firing Filter: 'HeaderWriterFilter'
/swagger-ui at position 4 of 14 in additional filter chain; firing Filter: 'CsrfFilter'
/swagger-ui at position 5 of 14 in additional filter chain; firing Filter: 'LogoutFilter'
Request 'GET /swagger-ui' doesn't match 'POST /logout'
/swagger-ui at position 6 of 14 in additional filter chain; firing Filter: 'UsernamePasswordAuthenticationFilter'
Request 'GET /swagger-ui' doesn't match 'POST /login'
/swagger-ui at position 7 of 14 in additional filter chain; firing Filter: 'DefaultLoginPageGeneratingFilter'
/swagger-ui at position 8 of 14 in additional filter chain; firing Filter: 'BasicAuthenticationFilter'
/swagger-ui at position 9 of 14 in additional filter chain; firing Filter: 'RequestCacheAwareFilter'
saved request doesn't match
/swagger-ui at position 10 of 14 in additional filter chain; firing Filter: 'SecurityContextHolderAwareRequestFilter'
/swagger-ui at position 11 of 14 in additional filter chain; firing Filter: 'AnonymousAuthenticationFilter'
Populated SecurityContextHolder with anonymous token: 'org.springframework.security.authentication.AnonymousAuthenticationToken@20802ebf: Principal: anonymousUser; Credentials: [PROTECTED]; Authenticated: true; Details: org.springframework.security.web.authentication.WebAuthenticationDetails@b364: RemoteIpAddress: 0:0:0:0:0:0:0:1; SessionId: null; Granted Authorities: ROLE_ANONYMOUS'
/swagger-ui at position 12 of 14 in additional filter chain; firing Filter: 'SessionManagementFilter'
Requested session ID 94o0xhs111w11kf49arx7gvtp is invalid.
/swagger-ui at position 13 of 14 in additional filter chain; firing Filter: 'ExceptionTranslationFilter'
/swagger-ui at position 14 of 14 in additional filter chain; firing Filter: 'FilterSecurityInterceptor'
Secure object: FilterInvocation: URL: /swagger-ui; Attributes: [authenticated]
Previously Authenticated: org.springframework.security.authentication.AnonymousAuthenticationToken@20802ebf: Principal: anonymousUser; Credentials: [PROTECTED]; Authenticated: true; Details: org.springframework.security.web.authentication.WebAuthenticationDetails@b364: RemoteIpAddress: 0:0:0:0:0:0:0:1; SessionId: null; Granted Authorities: ROLE_ANONYMOUS
Voter: org.springframework.security.web.access.expression.WebExpressionVoter@8161218, returned: -1
Access is denied (user is anonymous); redirecting to authentication entry point
org.springframework.security.access.AccessDeniedException: Access is denied
	at org.springframework.security.access.vote.AffirmativeBased.decide(AffirmativeBased.java:84)
	at org.springframework.security.access.intercept.AbstractSecurityInterceptor.beforeInvocation(AbstractSecurityInterceptor.java:233)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:124)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:170)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:158)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.ui.DefaultLoginPageGeneratingFilter.doFilter(DefaultLoginPageGeneratingFilter.java:206)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:200)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.csrf.CsrfFilter.doFilterInternal(CsrfFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:74)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1645)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:564)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:143)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:578)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:221)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1111)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:498)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:183)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1045)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:141)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:199)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:98)
	at org.eclipse.jetty.server.Server.handle(Server.java:461)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:284)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:244)
	at org.eclipse.jetty.io.AbstractConnection$2.run(AbstractConnection.java:534)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:607)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:536)
	at java.lang.Thread.run(Thread.java:748)
Request '/swagger-ui' matched by universal pattern '/**'
DefaultSavedRequest added to Session: DefaultSavedRequest[http://localhost:8082/swagger-ui]
Calling Authentication entry point.
Redirecting to 'http://localhost:8082/login'
Not injecting HSTS header since it did not match the requestMatcher org.springframework.security.web.header.writers.HstsHeaderWriter$SecureRequestMatcher@5ae9ca76
SecurityContext is empty or contents are anonymous - context will not be stored in HttpSession.
SecurityContextHolder now cleared, as request processing completed
/login at position 1 of 14 in additional filter chain; firing Filter: 'SecurityContextPersistenceFilter'
HttpSession returned null object for SPRING_SECURITY_CONTEXT
No SecurityContext was available from the HttpSession: org.eclipse.jetty.server.session.HashedSession:npixbsfm6lhadex9yep4ao@90578171. A new one will be created.
/login at position 2 of 14 in additional filter chain; firing Filter: 'WebAsyncManagerIntegrationFilter'
/login at position 3 of 14 in additional filter chain; firing Filter: 'HeaderWriterFilter'
/login at position 4 of 14 in additional filter chain; firing Filter: 'CsrfFilter'
/login at position 5 of 14 in additional filter chain; firing Filter: 'LogoutFilter'
Request 'GET /login' doesn't match 'POST /logout'
/login at position 6 of 14 in additional filter chain; firing Filter: 'UsernamePasswordAuthenticationFilter'
Request 'GET /login' doesn't match 'POST /login'
/login at position 7 of 14 in additional filter chain; firing Filter: 'DefaultLoginPageGeneratingFilter'
Not injecting HSTS header since it did not match the requestMatcher org.springframework.security.web.header.writers.HstsHeaderWriter$SecureRequestMatcher@5ae9ca76
SecurityContext is empty or contents are anonymous - context will not be stored in HttpSession.
SecurityContextHolder now cleared, as request processing completed
